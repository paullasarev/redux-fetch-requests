"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var fp=require("lodash/fp");const FETCH_CANCEL_REQUESTS="FETCH_CANCEL_REQUESTS";function fetchCancelRequests(){return{type:FETCH_CANCEL_REQUESTS}}const hasRequest=fp.has("request"),responseTypes=["arraybuffer","blob","formData","json","text",null];function makeSuccessType(e){return`${e}_SUCCESS`}function makeErrorType(e){return`${e}_ERROR`}function makeCancelType(e){return`${e}_CANCEL`}function getResponseData(e,t){if(-1===responseTypes.indexOf(t))throw new Error(`responseType must be one of the following: ${responseTypes.map(String).join(", ")}`);return null===t?Promise.resolve(null):e[t]()}async function fetchData(e,t,r){const{fetchInstance:a,baseUrl:s,abortController:n}=r,{request:{url:o,responseType:c="json",isCancellable:p=!0,...l},meta:u}=e;try{const r=p&&n?{signal:n.signal}:void 0,C=await a(`${s}${o}`,{...r,...l});if(C.ok)return C.data=await getResponseData(C,c),t({type:makeSuccessType(e.type),response:C,meta:u});try{C.data=await C.json()}catch(e){}throw C}catch(r){return t({type:"AbortError"===r.name?makeCancelType(e.type):makeErrorType(e.type),error:r,meta:u})}}function createMiddleware(e){const{fetchInstance:t=fetch,baseUrl:r="/",abortController:a=new AbortController}=e;return({dispatch:e})=>s=>n=>n.type===FETCH_CANCEL_REQUESTS?(a.abort(),s(n)):hasRequest(n)?fetchData(n,e,{fetchInstance:t,baseUrl:r,abortController:a}):s(n)}exports.FETCH_CANCEL_REQUESTS=FETCH_CANCEL_REQUESTS,exports.createMiddleware=createMiddleware,exports.fetchCancelRequests=fetchCancelRequests,exports.fetchData=fetchData,exports.getResponseData=getResponseData,exports.makeCancelType=makeCancelType,exports.makeErrorType=makeErrorType,exports.makeSuccessType=makeSuccessType;
