"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var fp=require("lodash/fp"),lodash=require("lodash");const FETCH_CANCEL_REQUESTS="FETCH_CANCEL_REQUESTS";function fetchCancelRequests(){return{type:FETCH_CANCEL_REQUESTS}}const hasRequest=fp.has("request"),responseTypes=["arraybuffer","blob","formData","json","text",null];function makeSuccessType(e){return`${e}_SUCCESS`}function makeErrorType(e){return`${e}_ERROR`}function makeCancelType(e){return`${e}_CANCEL`}function getResponseData(e,t){if(-1===responseTypes.indexOf(t))throw new Error(`responseType must be one of the following: ${responseTypes.map(String).join(", ")}`);return null===t?Promise.resolve(null):e[t]()}function isAbortError(e){return"AbortError"===e.name}async function fetchData(e,t,r,a){const{fetchInstance:n=fetch,baseUrl:s="/",abortController:o,onRequest:c,onSuccess:u,onError:l,onCancel:i}=a,{request:{url:p,responseType:d="json",isCancellable:f=!0,...E},meta:y}=e;try{const l=f&&o?{signal:o.signal}:void 0,i=lodash.isFunction(c)?c(E,e,t,r,a):E,C=await n(`${s}${p}`,{...l,...i});if(C.ok){C.data=await getResponseData(C,d);const n=lodash.isFunction(u)?u(C,e,t,r,a):C;return t({type:makeSuccessType(e.type),response:n,data:n.data,meta:y})}try{C.data=await C.json()}catch(e){}throw C}catch(n){const s=isAbortError(n),o=s?makeCancelType(e.type):makeErrorType(e.type),c=s?i:l;return lodash.isFunction(c)&&c(n,e,t,r,a),t({type:o,error:n,meta:y})}}function createMiddleware(e){const{abortController:t=new AbortController,cancelOn:r=[FETCH_CANCEL_REQUESTS]}=e;return({dispatch:a,getState:n})=>s=>o=>lodash.isArray(r)&&r.indexOf(o.type)>=0?(t.abort(),s(o)):lodash.isFunction(r)&&r(o)?(t.abort(),s(o)):hasRequest(o)?fetchData(o,a,n,e):s(o)}const defaultState=(e={})=>{const{getDefaultData:t,multiple:r=!1}=e;let a=r?[]:null;return lodash.isFunction(t)&&(a=t(e)),{data:a,error:null,pending:0}};function requestsReducer(e={}){const{actionType:t="UNKNOWN_ACTION",getData:r,getError:a,resetOn:n}=e,s=makeSuccessType(t),o=makeErrorType(t),c=makeCancelType(t);return(u,l)=>{let i=u;switch(lodash.isUndefined(u)&&(i=defaultState(e)),lodash.isArray(n)&&n.indexOf(l.type)>=0&&(i=defaultState(e)),lodash.isFunction(n)&&n(l)&&(i=defaultState(e)),l.type){case t:return{...i,pending:i.pending+1};case s:{const t=lodash.isFunction(r)?r(i,l,e):l.data;return{...i,data:t,pending:i.pending-1}}case c:case o:{const t=lodash.isFunction(a)?a(i,l,e):l.error;return{...i,error:t,pending:i.pending-1}}default:return i}}}exports.FETCH_CANCEL_REQUESTS=FETCH_CANCEL_REQUESTS,exports.createMiddleware=createMiddleware,exports.defaultState=defaultState,exports.fetchCancelRequests=fetchCancelRequests,exports.fetchData=fetchData,exports.getResponseData=getResponseData,exports.isAbortError=isAbortError,exports.makeCancelType=makeCancelType,exports.makeErrorType=makeErrorType,exports.makeSuccessType=makeSuccessType,exports.requestsReducer=requestsReducer;
